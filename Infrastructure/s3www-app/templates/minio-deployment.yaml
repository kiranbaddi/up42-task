
{{- if .Values.minio.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  {{- if .Values.minio.namespace }}
  namespace: {{ .Values.minio.namespace }}
  {{- end }}
  labels:
    {{- include "s3www.labels" . | nindent 4 }}
    app.kubernetes.io/component: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "s3www.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: minio
  template:
    metadata:
      labels:
        {{- include "s3www.labels" . | nindent 8 }}
        app.kubernetes.io/component: minio
      {{- if .Values.minio.annotations }}
      annotations:
        {{- range $key, $value := .Values.minio.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- if .Values.minio.environment }}
        prometheus.io/environment: {{ .Values.minio.environment | quote }}
        {{- end }}
      {{- end }}
    spec:
      containers:
        - name: minio
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
          args: ["server", "/data"]
          env:
            - name: ENVIRONMENT
              value: {{ .Values.minio.environment | default "development" | quote }}
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: secretkey
          ports:
            - name: minio
              containerPort: {{ .Values.minio.service.port }}
            - name: minio-console
              containerPort: {{ .Values.minio.service.consolePort }}
          volumeMounts:
            - name: minio-data
              mountPath: /data
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  {{- if .Values.minio.namespace }}
  namespace: {{ .Values.minio.namespace }}
  {{- end }}
  labels:
    {{- include "s3www.labels" . | nindent 4 }}
    app.kubernetes.io/component: minio
spec:
  ports:
    - name: minio
      port: {{ .Values.minio.service.port }}
      targetPort: {{ .Values.minio.service.port }}
    - name: minio-console
      port: {{ .Values.minio.service.consolePort }}
      targetPort: {{ .Values.minio.service.consolePort }}
  selector:
    {{- include "s3www.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: minio
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  {{- if .Values.minio.namespace }}
  namespace: {{ .Values.minio.namespace }}
  {{- end }}
  labels:
    {{- include "s3www.labels" . | nindent 4 }}
    app.kubernetes.io/component: minio
type: Opaque
data:
  accesskey: {{ .Values.minio.credentials.accessKey | b64enc }}
  secretkey: {{ .Values.minio.credentials.secretKey | b64enc }}
{{- end }}
