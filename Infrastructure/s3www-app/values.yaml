# Default values for s3www.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global configuration
enabled: false
environment: production

# Image configuration
image:
  repository: ""
  tag: ""
  pullPolicy: IfNotPresent

# Service configuration
service:
  type: ClusterIP
  port: 8080

# S3 bucket name
# Pod annotations
annotations: {}

# Resource limits and requests
resources: {}

# Ingress configuration
ingress:
  enabled: false
  host: ""

# Image pull secret configuration
imagePullSecret:
  enabled: false
  name: ""
  server: ""
  username: ""
  password: ""

# Liveness probe configuration
livenessProbe:
  enabled: false
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# Readiness probe configuration
readinessProbe:
  enabled: false
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# MinIO configuration
minio:
  enabled: true
  namespace: ""
  bucket: ""
  service:
    name: ""
    port: 9000
  credentials:
    accessKey: ""
    secretKey: ""

minioClientJob:
  enabled: true

htmlContent: |
  <html>
    <head>
      <title>Web App</title>
    </head>
    <body>
      <h1>Welcome to the Web App</h1>
      <p>This is a sample HTML content served by the web app.</p>
    </body>
  </html>
# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
