# Default values for s3www.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# MinIO configuration
minio:
  enabled: true
  namespace: minio
  environment: 
  image:
    repository: minio/minio
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 9000
    consolePort: 9001
  persistence:
    size: 10Gi
    storageClass: standard
  credentials:
    accessKey: 
    secretKey: 
  resources:
    requests:
      memory: "128Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# WebApp application configuration
webapp:
  enabled: true
  namespace: webapp
  environment: 
  image:
    repository: s3wwwapp.azurecr.io/s3www
    tag: 1.0.0
    pullPolicy: IfNotPresent
  service:
    port: 8080
  bucket: up42
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  ingress:
    enabled: true
    host: webapp.local
  imagePullSecret:
    enabled: false
    name: webapp-image-pull-secret
    server: s3wwwapp.azurecr.io
    username: ""
    password: ""
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3

# MinIO client job configuration
mcClientJob:
  enabled: true
  image:
    repository: minio/mc
    tag: latest
    pullPolicy: IfNotPresent
  ttlSecondsAfterFinished: 100
  resources:
    requests:
      memory: "128Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Storage class configuration
storageClass:
  enabled: true
  name: local-storage
  provisioner: rancher.io/local-path
  # skuName: Standard_LRS # If you are using Azure, you can specify the SKU name here.
  type: default
  fsType: ext4
  volumeBindingMode: WaitForFirstConsumer
  reclaimPolicy: Delete
  isDefault: true
  allowVolumeExpansion: true
  mountOptions: []
